;PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
lib_deps = https://github.com/RudolphRiedel/FT800-FT813/archive/refs/heads/5.x.zip
framework = arduino
build_flags = -D EVE_RVT50H

[env:uno]
platform = atmelavr
board = uno
build_unflags = -Os
build_flags =
        ${env.build_flags}
         -D EVE_CS=10
         -D EVE_PDN=8
         -O2

[env:avr_pro]
platform = atmelavr
board = pro16MHzatmega328
build_unflags = -Os
build_flags =
        ${env.build_flags}
         -D EVE_CS=10
         -D EVE_PDN=8
         -O2

[env:nano328]
platform = atmelavr
board = nanoatmega328
build_unflags = -Os
build_flags =
        ${env.build_flags}
         -D EVE_CS=10
         -D EVE_PDN=8
         -O2

[env:mega2560]
platform = atmelavr
board = megaatmega2560
build_unflags = -Os
build_flags =
        ${env.build_flags}
         -D EVE_CS=10
         -D EVE_PDN=8
         -O2

[env:adafruit_metro_m4]
platform = atmelsam
lib_deps = ${env.lib_deps}
            adafruit/Adafruit Zero DMA Library
lib_archive = false
upload_protocol = sam-ba
board = adafruit_metro_m4
build_unflags = -Os
build_flags =
        ${env.build_flags}
         -D EVE_CS=10
         -D EVE_PDN=8
         -O2

[env:samd21_m0-mini]
platform = atmelsam
board = mzeroUSB
build_unflags = -Os
build_flags =
        ${env.build_flags}
         -D EVE_CS=10
         -D EVE_PDN=8
         -O2

[env:samd21_seeed_xiao]
platform = atmelsam
board = seeed_xiao
build_unflags = -Os
build_flags =
        ${env.build_flags}
         -D EVE_CS=10
         -D EVE_PDN=8
         -O2

[env:ESP32]
platform = espressif32
board = esp32doit-devkit-v1
build_unflags = -Os
build_flags =
        ${env.build_flags}
;         -D EVE_USE_ESP_IDF
         -D EVE_CS=13
         -D EVE_PDN=12
         -D EVE_SCK=18
         -D EVE_MISO=19
         -D EVE_MOSI=23
         -O2

[env:ESP32-S3]
platform = espressif32
board = dfrobot_firebeetle2_esp32s3
build_unflags = -Os
build_flags =
        ${env.build_flags}
;         -D EVE_USE_ESP_IDF
         -D EVE_CS=10
         -D EVE_PDN=14
         -D EVE_SCK=12
         -D EVE_MISO=13
         -D EVE_MOSI=11
         -O2

[env:ESP32-C3]
platform = espressif32
board = seeed_xiao_esp32c3
build_unflags = -Os
build_flags =
        ${env.build_flags}
         -D EVE_USE_ESP_IDF
         -D EVE_CS=5
         -D EVE_PDN=4
         -D EVE_SCK=8
         -D EVE_MISO=9
         -D EVE_MOSI=10
         -O2

[env:ESP8266_d1_mini]
platform = espressif8266
board = d1_mini
monitor_speed = 115200
build_unflags = -Os
build_flags =
        ${env.build_flags}
         -D EVE_CS=D3
         -D EVE_PDN=D4
         -O2

[env:nucleo_f446re]
platform = ststm32
board = nucleo_f446re
upload_protocol = stlink
build_unflags = -Os
build_flags =
        ${env.build_flags}
         -D EVE_CS=10
         -D EVE_PDN=8
         -D EVE_SPI=SPI1
         -O2

[env:teensy40]
platform = teensy
board = teensy40
build_unflags = -Os
build_flags =
        ${env.build_flags}
         -D EVE_CS=10
         -D EVE_PDN=9
         -O2

[env:teensy41]
platform = teensy
board = teensy41
build_unflags = -Os
build_flags =
        ${env.build_flags}
         -D EVE_CS=10
         -D EVE_PDN=9
         -O2

[env:adafruit_feather_nrf52840]
platform = nordicnrf52
board = adafruit_feather_nrf52840
build_unflags = -Os
build_flags =
        ${env.build_flags}
         -D EVE_CS=10
         -D EVE_PDN=8
         -O2

[env:bbcmicrobit_v2]
platform = nordicnrf52
board = bbcmicrobit_v2
build_unflags = -Os
build_flags =
        ${env.build_flags}
         -D EVE_CS=12
         -D EVE_PDN=9
         -O2

[env:teensy35]
platform = teensy
board = teensy35
build_unflags = -Os
build_flags =
        ${env.build_flags}
         -D EVE_CS=10
         -D EVE_PDN=9
         -O2

[env:xmc1100_xmc2go]
platform = infineonxmc
board = xmc1100_xmc2go
build_unflags = -Os
build_flags =
        ${env.build_flags}
         -D EVE_CS=3
         -D EVE_PDN=4
         -O2
; XMC SPI needs Wire and PlatformIO can not resolve the dependency without help
lib_deps =
        ${env.lib_deps}
        Wire

[env:pico]
platform = raspberrypi
board = pico
build_unflags = -Os
build_flags =
        ${env.build_flags}
            -D EVE_CS=5
            -D EVE_PDN=6
            -D EVE_SCK=2
            -D EVE_MOSI=3
            -D EVE_MISO=4
            -D EVE_SPI=spi0
            -D EVE_DMA
            -D EVE_ROTATE=0
            -D EVE_BACKLIGHT_PWM=30
            -O2

; note: there is no target in the library for the DUE so this is using the Arduino generic target
[env:dueUSB]
platform = atmelsam
board = dueUSB
build_unflags = -Os
build_flags =
        ${env.build_flags}
        -O2

[env:portenta_h7_m4]
platform = ststm32
board = portenta_h7_m4
build_unflags = -Os
build_flags =
        ${env.build_flags}
        -O2

[env:portenta_h7_m7]
platform = ststm32
board = portenta_h7_m7
build_unflags = -Os
build_flags =
        ${env.build_flags}
        -O2

[env:uno_r4_minima]
platform = renesas-ra
;platform = https://github.com/platformio/platform-renesas-ra.git
board = uno_r4_minima
build_unflags = -Os
build_flags =
        ${env.build_flags}
        -O2

[env:uno_r4_wifi]
platform = renesas-ra
;platform = https://github.com/platformio/platform-renesas-ra.git
board = uno_r4_wifi
build_unflags = -Os
build_flags =
        ${env.build_flags}
        -O2
